apiVersion: apps/v1
kind: Deployment
{{.Values.image.repository}}
{{.Chart.Description}}
{{.Chart.Name}} {{.Chart.Version}} {{.Chart.AppVersion}}
{{.Chart.Annotations}}
{{.Release.Name}}
{{.Release.Namespace}}
{{.Release.IsInstall}}
{{.Release.IsUpgrade}}
{{.Release.Service}}
{{.Template.Name}}
{{.Template.BasePath}}
{{.Capabilities.APIVersions}}
{{.Capabilities.APIVersions.Has "batch/v1"}}
{{.Capabilities.KubeVersion}}
{{.Capabilities.HelmVersion}}
{{.Chart.Icon | default "missing" | upper | quote}}
{{- "TEST WHo???"}}
{{- if .Values.serviceAccount.create }}
{{- "service account should be created" | nindent 16}}
{{- else}}
{{- "no service account for you!" | nindent 16}}
{{- end }}
{{"TESTING WITH"}}
{{with .Values.custom.favorite.countries}}
countries:
{{- toYaml . | nindent 2}}
{{- end}}
{{with .Values.custom.favorite.drink}}
drink: {{ . }}
{{- else}}
drink: "Cocacola"
{{- end}}
{{- $ovrd:=.Values.custom.favorite.food}}
{{$ovrd | indent 16}}

{{"RANGE NORMAL"}}
{{- range .Values.custom.favorite.countries }}
{{-  . | upper}}
{{end}}

{{"RANGE Index and Value"}}
{{range $index, $value := .Values.custom.favorite.countries }}
{{- printf "Index: %d, Value: %s" $index $value | indent 16 }}
{{end}}


{{"RANGE dictionary"}}
{{range $index, $value := .Values.image }}
{{- printf "DICT> Key: %s, Value: %s" $index $value | indent 16 }}
{{end}}

{{"Funny looping"}}
{{ repeat 16 "shit!" }}

{{"The beginner for loop increment"}}
{{- range untilStep 2 11 2 }}
    - containerPort: {{ . }}
      protocol: TCP
  {{- end }}

{{"The beginner for loop deccrement"}}
{{- range untilStep 10 1 -2 }}
    - containerPort: {{ . }}
      protocol: TCP
  {{- end }}

{{"Iterating tuple"}}
sizes:
    {{- range tuple "small" "medium" "large" }}
    - {{ . }}
    {{- end }}    




metadata:
  name: {{ include "product-microservice.fullname" . }}
  labels:
    {{- include "product-microservice.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "product-microservice.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "product-microservice.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "product-microservice.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
