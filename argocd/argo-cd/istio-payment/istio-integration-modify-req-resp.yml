# # Envoy filter does not overwrite request response
# # Will figure out later, while digging deep into envoy.

# apiVersion: networking.istio.io/v1
# kind: Gateway
# metadata:
#   name: payment-microservice-istio-gateway
# spec:
#   selector:
#     istio: ingressgateway # use istio default controller
#   servers:
#   - port:
#       number: 80
#       name: http
#       protocol: HTTP
#     hosts:
#     - "payment-service.cloud"
# ---
# apiVersion: networking.istio.io/v1
# kind: VirtualService
# metadata:
#   name: payment-microservice-istio-virtualsvc
# spec:
#   hosts:
#   - "payment-service.cloud"
#   gateways:
#   - payment-microservice-istio-gateway
#   http:
#   - route:
#     - destination:
#         host: payment-microservice


# --- 
# apiVersion: networking.istio.io/v1
# kind: DestinationRule
# metadata:
#   name: payment-microservice-destrule
# spec:
#   host: payment-microservice # Kubernetes service, not hostname!!!
#   subsets:
#   - name: blue
#     labels:
#       version: "1.0.0"
#   - name: green
#     labels:
#       version: "1.0.1"
  
# --- 

# apiVersion: networking.istio.io/v1alpha3
# kind: EnvoyFilter
# metadata:
#   name: lua-envoy-filter-modify-req-resp
# spec:
#   workloadSelector:
#     labels:
#       app: payment-microservice
#   configPatches:
#     - applyTo: HTTP_FILTER
#       match:
#         context: SIDECAR_INBOUND
#         listener:
#           filterChain:
#             filter:
#               name: "envoy.http_connection_manager"
#               subFilter:
#                 name: "envoy.router"
#       patch:
#         operation: INSERT_BEFORE
#         value:
#           name: envoy.lua
#           typed_config:
#             "@type": "type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua"
#             inlineCode: |
#               function envoy_on_request(request_handle)
#                 -- send back static response and do not continue
#                 request_handle: respond({ [":status"] = "200" }, "Envoy Filtered Message")
#               end
#               function envoy_on_response(request_handle)
#                 -- add response specific logic here
#               end

